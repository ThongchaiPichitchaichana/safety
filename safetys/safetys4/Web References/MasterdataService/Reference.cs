//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace safetys4.MasterdataService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MasterdataSoap", Namespace="http://tempuri.org/")]
    public partial class Masterdata : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getFuctionlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFuctionByCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStatuscontractorOperationCompleted;
        
        private System.Threading.SendOrPostCallback generateMasterDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Masterdata() {
            this.Url = global::safetys4.Properties.Settings.Default.safetys_MasterdataService_Masterdata;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getFuctionlistCompletedEventHandler getFuctionlistCompleted;
        
        /// <remarks/>
        public event getFuctionByCompanyCompletedEventHandler getFuctionByCompanyCompleted;
        
        /// <remarks/>
        public event getCompanyCompletedEventHandler getCompanyCompleted;
        
        /// <remarks/>
        public event getStatuscontractorCompletedEventHandler getStatuscontractorCompleted;
        
        /// <remarks/>
        public event generateMasterDataCompletedEventHandler generateMasterDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFuctionlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getFuctionlist(string lang) {
            this.Invoke("getFuctionlist", new object[] {
                        lang});
        }
        
        /// <remarks/>
        public void getFuctionlistAsync(string lang) {
            this.getFuctionlistAsync(lang, null);
        }
        
        /// <remarks/>
        public void getFuctionlistAsync(string lang, object userState) {
            if ((this.getFuctionlistOperationCompleted == null)) {
                this.getFuctionlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFuctionlistOperationCompleted);
            }
            this.InvokeAsync("getFuctionlist", new object[] {
                        lang}, this.getFuctionlistOperationCompleted, userState);
        }
        
        private void OngetFuctionlistOperationCompleted(object arg) {
            if ((this.getFuctionlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFuctionlistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFuctionByCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getFuctionByCompany(string company, string lang) {
            this.Invoke("getFuctionByCompany", new object[] {
                        company,
                        lang});
        }
        
        /// <remarks/>
        public void getFuctionByCompanyAsync(string company, string lang) {
            this.getFuctionByCompanyAsync(company, lang, null);
        }
        
        /// <remarks/>
        public void getFuctionByCompanyAsync(string company, string lang, object userState) {
            if ((this.getFuctionByCompanyOperationCompleted == null)) {
                this.getFuctionByCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFuctionByCompanyOperationCompleted);
            }
            this.InvokeAsync("getFuctionByCompany", new object[] {
                        company,
                        lang}, this.getFuctionByCompanyOperationCompleted, userState);
        }
        
        private void OngetFuctionByCompanyOperationCompleted(object arg) {
            if ((this.getFuctionByCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFuctionByCompanyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getCompany", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getCompany(string lang) {
            this.Invoke("getCompany", new object[] {
                        lang});
        }
        
        /// <remarks/>
        public void getCompanyAsync(string lang) {
            this.getCompanyAsync(lang, null);
        }
        
        /// <remarks/>
        public void getCompanyAsync(string lang, object userState) {
            if ((this.getCompanyOperationCompleted == null)) {
                this.getCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyOperationCompleted);
            }
            this.InvokeAsync("getCompany", new object[] {
                        lang}, this.getCompanyOperationCompleted, userState);
        }
        
        private void OngetCompanyOperationCompleted(object arg) {
            if ((this.getCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getStatuscontractor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getStatuscontractor(string lang) {
            this.Invoke("getStatuscontractor", new object[] {
                        lang});
        }
        
        /// <remarks/>
        public void getStatuscontractorAsync(string lang) {
            this.getStatuscontractorAsync(lang, null);
        }
        
        /// <remarks/>
        public void getStatuscontractorAsync(string lang, object userState) {
            if ((this.getStatuscontractorOperationCompleted == null)) {
                this.getStatuscontractorOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStatuscontractorOperationCompleted);
            }
            this.InvokeAsync("getStatuscontractor", new object[] {
                        lang}, this.getStatuscontractorOperationCompleted, userState);
        }
        
        private void OngetStatuscontractorOperationCompleted(object arg) {
            if ((this.getStatuscontractorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStatuscontractorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/generateMasterData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void generateMasterData() {
            this.Invoke("generateMasterData", new object[0]);
        }
        
        /// <remarks/>
        public void generateMasterDataAsync() {
            this.generateMasterDataAsync(null);
        }
        
        /// <remarks/>
        public void generateMasterDataAsync(object userState) {
            if ((this.generateMasterDataOperationCompleted == null)) {
                this.generateMasterDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngenerateMasterDataOperationCompleted);
            }
            this.InvokeAsync("generateMasterData", new object[0], this.generateMasterDataOperationCompleted, userState);
        }
        
        private void OngenerateMasterDataOperationCompleted(object arg) {
            if ((this.generateMasterDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.generateMasterDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getFuctionlistCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getFuctionByCompanyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCompanyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getStatuscontractorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void generateMasterDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591