//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace safetys4.ActioneventService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ActioneventSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class Actionevent : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getFuctionlistOperationCompleted;
        
        private System.Threading.SendOrPostCallback createContractorOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateContractorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getContractorbyidOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkEmailContractorOperationCompleted;
        
        private System.Threading.SendOrPostCallback createSuperadminOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDelegateSuperadminOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteSuperadminOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDelegateSuperadminOperationCompleted;
        
        private System.Threading.SendOrPostCallback createOHSOperationCompleted;
        
        private System.Threading.SendOrPostCallback createDelegateOHSOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteOHSOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDelegateOHSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAreaByidOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAreaOHSOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAreaManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback createAreaSupervisorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Actionevent() {
            this.Url = global::safetys4.Properties.Settings.Default.safetys_ActioneventService_Actionevent;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getFuctionlistCompletedEventHandler getFuctionlistCompleted;
        
        /// <remarks/>
        public event createContractorCompletedEventHandler createContractorCompleted;
        
        /// <remarks/>
        public event updateContractorCompletedEventHandler updateContractorCompleted;
        
        /// <remarks/>
        public event getContractorbyidCompletedEventHandler getContractorbyidCompleted;
        
        /// <remarks/>
        public event checkEmailContractorCompletedEventHandler checkEmailContractorCompleted;
        
        /// <remarks/>
        public event createSuperadminCompletedEventHandler createSuperadminCompleted;
        
        /// <remarks/>
        public event createDelegateSuperadminCompletedEventHandler createDelegateSuperadminCompleted;
        
        /// <remarks/>
        public event deleteSuperadminCompletedEventHandler deleteSuperadminCompleted;
        
        /// <remarks/>
        public event deleteDelegateSuperadminCompletedEventHandler deleteDelegateSuperadminCompleted;
        
        /// <remarks/>
        public event createOHSCompletedEventHandler createOHSCompleted;
        
        /// <remarks/>
        public event createDelegateOHSCompletedEventHandler createDelegateOHSCompleted;
        
        /// <remarks/>
        public event deleteOHSCompletedEventHandler deleteOHSCompleted;
        
        /// <remarks/>
        public event createAreaCompletedEventHandler createAreaCompleted;
        
        /// <remarks/>
        public event deleteAreaCompletedEventHandler deleteAreaCompleted;
        
        /// <remarks/>
        public event deleteDelegateOHSCompletedEventHandler deleteDelegateOHSCompleted;
        
        /// <remarks/>
        public event getAreaByidCompletedEventHandler getAreaByidCompleted;
        
        /// <remarks/>
        public event updateAreaCompletedEventHandler updateAreaCompleted;
        
        /// <remarks/>
        public event createAreaOHSCompletedEventHandler createAreaOHSCompleted;
        
        /// <remarks/>
        public event createAreaManagerCompletedEventHandler createAreaManagerCompleted;
        
        /// <remarks/>
        public event createAreaSupervisorCompletedEventHandler createAreaSupervisorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFuctionlist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getFuctionlist() {
            this.Invoke("getFuctionlist", new object[0]);
        }
        
        /// <remarks/>
        public void getFuctionlistAsync() {
            this.getFuctionlistAsync(null);
        }
        
        /// <remarks/>
        public void getFuctionlistAsync(object userState) {
            if ((this.getFuctionlistOperationCompleted == null)) {
                this.getFuctionlistOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFuctionlistOperationCompleted);
            }
            this.InvokeAsync("getFuctionlist", new object[0], this.getFuctionlistOperationCompleted, userState);
        }
        
        private void OngetFuctionlistOperationCompleted(object arg) {
            if ((this.getFuctionlistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFuctionlistCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createContractor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createContractor(string function_id, string userid, string email, string prefixth, string firstnameth, string lastnameth, string prefixen, string firstnameen, string lastnameen, string companyname, string mobilephone, string phone, string active) {
            this.Invoke("createContractor", new object[] {
                        function_id,
                        userid,
                        email,
                        prefixth,
                        firstnameth,
                        lastnameth,
                        prefixen,
                        firstnameen,
                        lastnameen,
                        companyname,
                        mobilephone,
                        phone,
                        active});
        }
        
        /// <remarks/>
        public void createContractorAsync(string function_id, string userid, string email, string prefixth, string firstnameth, string lastnameth, string prefixen, string firstnameen, string lastnameen, string companyname, string mobilephone, string phone, string active) {
            this.createContractorAsync(function_id, userid, email, prefixth, firstnameth, lastnameth, prefixen, firstnameen, lastnameen, companyname, mobilephone, phone, active, null);
        }
        
        /// <remarks/>
        public void createContractorAsync(string function_id, string userid, string email, string prefixth, string firstnameth, string lastnameth, string prefixen, string firstnameen, string lastnameen, string companyname, string mobilephone, string phone, string active, object userState) {
            if ((this.createContractorOperationCompleted == null)) {
                this.createContractorOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateContractorOperationCompleted);
            }
            this.InvokeAsync("createContractor", new object[] {
                        function_id,
                        userid,
                        email,
                        prefixth,
                        firstnameth,
                        lastnameth,
                        prefixen,
                        firstnameen,
                        lastnameen,
                        companyname,
                        mobilephone,
                        phone,
                        active}, this.createContractorOperationCompleted, userState);
        }
        
        private void OncreateContractorOperationCompleted(object arg) {
            if ((this.createContractorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createContractorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateContractor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateContractor(string function_id, string id, string userid, string email, string prefixth, string firstnameth, string lastnameth, string prefixen, string firstnameen, string lastnameen, string companyname, string mobilephone, string phone, string active) {
            this.Invoke("updateContractor", new object[] {
                        function_id,
                        id,
                        userid,
                        email,
                        prefixth,
                        firstnameth,
                        lastnameth,
                        prefixen,
                        firstnameen,
                        lastnameen,
                        companyname,
                        mobilephone,
                        phone,
                        active});
        }
        
        /// <remarks/>
        public void updateContractorAsync(string function_id, string id, string userid, string email, string prefixth, string firstnameth, string lastnameth, string prefixen, string firstnameen, string lastnameen, string companyname, string mobilephone, string phone, string active) {
            this.updateContractorAsync(function_id, id, userid, email, prefixth, firstnameth, lastnameth, prefixen, firstnameen, lastnameen, companyname, mobilephone, phone, active, null);
        }
        
        /// <remarks/>
        public void updateContractorAsync(string function_id, string id, string userid, string email, string prefixth, string firstnameth, string lastnameth, string prefixen, string firstnameen, string lastnameen, string companyname, string mobilephone, string phone, string active, object userState) {
            if ((this.updateContractorOperationCompleted == null)) {
                this.updateContractorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateContractorOperationCompleted);
            }
            this.InvokeAsync("updateContractor", new object[] {
                        function_id,
                        id,
                        userid,
                        email,
                        prefixth,
                        firstnameth,
                        lastnameth,
                        prefixen,
                        firstnameen,
                        lastnameen,
                        companyname,
                        mobilephone,
                        phone,
                        active}, this.updateContractorOperationCompleted, userState);
        }
        
        private void OnupdateContractorOperationCompleted(object arg) {
            if ((this.updateContractorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateContractorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getContractorbyid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getContractorbyid(string id, string lang) {
            this.Invoke("getContractorbyid", new object[] {
                        id,
                        lang});
        }
        
        /// <remarks/>
        public void getContractorbyidAsync(string id, string lang) {
            this.getContractorbyidAsync(id, lang, null);
        }
        
        /// <remarks/>
        public void getContractorbyidAsync(string id, string lang, object userState) {
            if ((this.getContractorbyidOperationCompleted == null)) {
                this.getContractorbyidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetContractorbyidOperationCompleted);
            }
            this.InvokeAsync("getContractorbyid", new object[] {
                        id,
                        lang}, this.getContractorbyidOperationCompleted, userState);
        }
        
        private void OngetContractorbyidOperationCompleted(object arg) {
            if ((this.getContractorbyidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getContractorbyidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkEmailContractor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void checkEmailContractor(string email, string function_id, string id) {
            this.Invoke("checkEmailContractor", new object[] {
                        email,
                        function_id,
                        id});
        }
        
        /// <remarks/>
        public void checkEmailContractorAsync(string email, string function_id, string id) {
            this.checkEmailContractorAsync(email, function_id, id, null);
        }
        
        /// <remarks/>
        public void checkEmailContractorAsync(string email, string function_id, string id, object userState) {
            if ((this.checkEmailContractorOperationCompleted == null)) {
                this.checkEmailContractorOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckEmailContractorOperationCompleted);
            }
            this.InvokeAsync("checkEmailContractor", new object[] {
                        email,
                        function_id,
                        id}, this.checkEmailContractorOperationCompleted, userState);
        }
        
        private void OncheckEmailContractorOperationCompleted(object arg) {
            if ((this.checkEmailContractorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkEmailContractorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createSuperadmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createSuperadmin(string[] employee_id) {
            this.Invoke("createSuperadmin", new object[] {
                        employee_id});
        }
        
        /// <remarks/>
        public void createSuperadminAsync(string[] employee_id) {
            this.createSuperadminAsync(employee_id, null);
        }
        
        /// <remarks/>
        public void createSuperadminAsync(string[] employee_id, object userState) {
            if ((this.createSuperadminOperationCompleted == null)) {
                this.createSuperadminOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateSuperadminOperationCompleted);
            }
            this.InvokeAsync("createSuperadmin", new object[] {
                        employee_id}, this.createSuperadminOperationCompleted, userState);
        }
        
        private void OncreateSuperadminOperationCompleted(object arg) {
            if ((this.createSuperadminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createSuperadminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createDelegateSuperadmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createDelegateSuperadmin(object[] employee_id) {
            this.Invoke("createDelegateSuperadmin", new object[] {
                        employee_id});
        }
        
        /// <remarks/>
        public void createDelegateSuperadminAsync(object[] employee_id) {
            this.createDelegateSuperadminAsync(employee_id, null);
        }
        
        /// <remarks/>
        public void createDelegateSuperadminAsync(object[] employee_id, object userState) {
            if ((this.createDelegateSuperadminOperationCompleted == null)) {
                this.createDelegateSuperadminOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDelegateSuperadminOperationCompleted);
            }
            this.InvokeAsync("createDelegateSuperadmin", new object[] {
                        employee_id}, this.createDelegateSuperadminOperationCompleted, userState);
        }
        
        private void OncreateDelegateSuperadminOperationCompleted(object arg) {
            if ((this.createDelegateSuperadminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDelegateSuperadminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteSuperadmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteSuperadmin(string id) {
            this.Invoke("deleteSuperadmin", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void deleteSuperadminAsync(string id) {
            this.deleteSuperadminAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteSuperadminAsync(string id, object userState) {
            if ((this.deleteSuperadminOperationCompleted == null)) {
                this.deleteSuperadminOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSuperadminOperationCompleted);
            }
            this.InvokeAsync("deleteSuperadmin", new object[] {
                        id}, this.deleteSuperadminOperationCompleted, userState);
        }
        
        private void OndeleteSuperadminOperationCompleted(object arg) {
            if ((this.deleteSuperadminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteSuperadminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteDelegateSuperadmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteDelegateSuperadmin(string id) {
            this.Invoke("deleteDelegateSuperadmin", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void deleteDelegateSuperadminAsync(string id) {
            this.deleteDelegateSuperadminAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteDelegateSuperadminAsync(string id, object userState) {
            if ((this.deleteDelegateSuperadminOperationCompleted == null)) {
                this.deleteDelegateSuperadminOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDelegateSuperadminOperationCompleted);
            }
            this.InvokeAsync("deleteDelegateSuperadmin", new object[] {
                        id}, this.deleteDelegateSuperadminOperationCompleted, userState);
        }
        
        private void OndeleteDelegateSuperadminOperationCompleted(object arg) {
            if ((this.deleteDelegateSuperadminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDelegateSuperadminCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createOHS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createOHS(string[] employee_id) {
            this.Invoke("createOHS", new object[] {
                        employee_id});
        }
        
        /// <remarks/>
        public void createOHSAsync(string[] employee_id) {
            this.createOHSAsync(employee_id, null);
        }
        
        /// <remarks/>
        public void createOHSAsync(string[] employee_id, object userState) {
            if ((this.createOHSOperationCompleted == null)) {
                this.createOHSOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOHSOperationCompleted);
            }
            this.InvokeAsync("createOHS", new object[] {
                        employee_id}, this.createOHSOperationCompleted, userState);
        }
        
        private void OncreateOHSOperationCompleted(object arg) {
            if ((this.createOHSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createOHSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createDelegateOHS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createDelegateOHS(object[] employee_id) {
            this.Invoke("createDelegateOHS", new object[] {
                        employee_id});
        }
        
        /// <remarks/>
        public void createDelegateOHSAsync(object[] employee_id) {
            this.createDelegateOHSAsync(employee_id, null);
        }
        
        /// <remarks/>
        public void createDelegateOHSAsync(object[] employee_id, object userState) {
            if ((this.createDelegateOHSOperationCompleted == null)) {
                this.createDelegateOHSOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateDelegateOHSOperationCompleted);
            }
            this.InvokeAsync("createDelegateOHS", new object[] {
                        employee_id}, this.createDelegateOHSOperationCompleted, userState);
        }
        
        private void OncreateDelegateOHSOperationCompleted(object arg) {
            if ((this.createDelegateOHSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createDelegateOHSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteOHS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteOHS(string id) {
            this.Invoke("deleteOHS", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void deleteOHSAsync(string id) {
            this.deleteOHSAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteOHSAsync(string id, object userState) {
            if ((this.deleteOHSOperationCompleted == null)) {
                this.deleteOHSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteOHSOperationCompleted);
            }
            this.InvokeAsync("deleteOHS", new object[] {
                        id}, this.deleteOHSOperationCompleted, userState);
        }
        
        private void OndeleteOHSOperationCompleted(object arg) {
            if ((this.deleteOHSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteOHSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createArea(string name_th, string name_en, string company_id, string function_id, string department_id, string division_id, string section_id) {
            this.Invoke("createArea", new object[] {
                        name_th,
                        name_en,
                        company_id,
                        function_id,
                        department_id,
                        division_id,
                        section_id});
        }
        
        /// <remarks/>
        public void createAreaAsync(string name_th, string name_en, string company_id, string function_id, string department_id, string division_id, string section_id) {
            this.createAreaAsync(name_th, name_en, company_id, function_id, department_id, division_id, section_id, null);
        }
        
        /// <remarks/>
        public void createAreaAsync(string name_th, string name_en, string company_id, string function_id, string department_id, string division_id, string section_id, object userState) {
            if ((this.createAreaOperationCompleted == null)) {
                this.createAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAreaOperationCompleted);
            }
            this.InvokeAsync("createArea", new object[] {
                        name_th,
                        name_en,
                        company_id,
                        function_id,
                        department_id,
                        division_id,
                        section_id}, this.createAreaOperationCompleted, userState);
        }
        
        private void OncreateAreaOperationCompleted(object arg) {
            if ((this.createAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteArea(string id) {
            this.Invoke("deleteArea", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void deleteAreaAsync(string id) {
            this.deleteAreaAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteAreaAsync(string id, object userState) {
            if ((this.deleteAreaOperationCompleted == null)) {
                this.deleteAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAreaOperationCompleted);
            }
            this.InvokeAsync("deleteArea", new object[] {
                        id}, this.deleteAreaOperationCompleted, userState);
        }
        
        private void OndeleteAreaOperationCompleted(object arg) {
            if ((this.deleteAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteDelegateOHS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void deleteDelegateOHS(string id) {
            this.Invoke("deleteDelegateOHS", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void deleteDelegateOHSAsync(string id) {
            this.deleteDelegateOHSAsync(id, null);
        }
        
        /// <remarks/>
        public void deleteDelegateOHSAsync(string id, object userState) {
            if ((this.deleteDelegateOHSOperationCompleted == null)) {
                this.deleteDelegateOHSOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDelegateOHSOperationCompleted);
            }
            this.InvokeAsync("deleteDelegateOHS", new object[] {
                        id}, this.deleteDelegateOHSOperationCompleted, userState);
        }
        
        private void OndeleteDelegateOHSOperationCompleted(object arg) {
            if ((this.deleteDelegateOHSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDelegateOHSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAreaByid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getAreaByid(string id) {
            this.Invoke("getAreaByid", new object[] {
                        id});
        }
        
        /// <remarks/>
        public void getAreaByidAsync(string id) {
            this.getAreaByidAsync(id, null);
        }
        
        /// <remarks/>
        public void getAreaByidAsync(string id, object userState) {
            if ((this.getAreaByidOperationCompleted == null)) {
                this.getAreaByidOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAreaByidOperationCompleted);
            }
            this.InvokeAsync("getAreaByid", new object[] {
                        id}, this.getAreaByidOperationCompleted, userState);
        }
        
        private void OngetAreaByidOperationCompleted(object arg) {
            if ((this.getAreaByidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAreaByidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void updateArea(string id, string name_th, string name_en) {
            this.Invoke("updateArea", new object[] {
                        id,
                        name_th,
                        name_en});
        }
        
        /// <remarks/>
        public void updateAreaAsync(string id, string name_th, string name_en) {
            this.updateAreaAsync(id, name_th, name_en, null);
        }
        
        /// <remarks/>
        public void updateAreaAsync(string id, string name_th, string name_en, object userState) {
            if ((this.updateAreaOperationCompleted == null)) {
                this.updateAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateAreaOperationCompleted);
            }
            this.InvokeAsync("updateArea", new object[] {
                        id,
                        name_th,
                        name_en}, this.updateAreaOperationCompleted, userState);
        }
        
        private void OnupdateAreaOperationCompleted(object arg) {
            if ((this.updateAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateAreaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createAreaOHS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createAreaOHS(string[] employee_id, string department_id) {
            this.Invoke("createAreaOHS", new object[] {
                        employee_id,
                        department_id});
        }
        
        /// <remarks/>
        public void createAreaOHSAsync(string[] employee_id, string department_id) {
            this.createAreaOHSAsync(employee_id, department_id, null);
        }
        
        /// <remarks/>
        public void createAreaOHSAsync(string[] employee_id, string department_id, object userState) {
            if ((this.createAreaOHSOperationCompleted == null)) {
                this.createAreaOHSOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAreaOHSOperationCompleted);
            }
            this.InvokeAsync("createAreaOHS", new object[] {
                        employee_id,
                        department_id}, this.createAreaOHSOperationCompleted, userState);
        }
        
        private void OncreateAreaOHSOperationCompleted(object arg) {
            if ((this.createAreaOHSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAreaOHSCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createAreaManager", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createAreaManager(string[] employee_id, string department_id, string division_id) {
            this.Invoke("createAreaManager", new object[] {
                        employee_id,
                        department_id,
                        division_id});
        }
        
        /// <remarks/>
        public void createAreaManagerAsync(string[] employee_id, string department_id, string division_id) {
            this.createAreaManagerAsync(employee_id, department_id, division_id, null);
        }
        
        /// <remarks/>
        public void createAreaManagerAsync(string[] employee_id, string department_id, string division_id, object userState) {
            if ((this.createAreaManagerOperationCompleted == null)) {
                this.createAreaManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAreaManagerOperationCompleted);
            }
            this.InvokeAsync("createAreaManager", new object[] {
                        employee_id,
                        department_id,
                        division_id}, this.createAreaManagerOperationCompleted, userState);
        }
        
        private void OncreateAreaManagerOperationCompleted(object arg) {
            if ((this.createAreaManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAreaManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createAreaSupervisor", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void createAreaSupervisor(string[] employee_id, string department_id, string division_id, string section_id) {
            this.Invoke("createAreaSupervisor", new object[] {
                        employee_id,
                        department_id,
                        division_id,
                        section_id});
        }
        
        /// <remarks/>
        public void createAreaSupervisorAsync(string[] employee_id, string department_id, string division_id, string section_id) {
            this.createAreaSupervisorAsync(employee_id, department_id, division_id, section_id, null);
        }
        
        /// <remarks/>
        public void createAreaSupervisorAsync(string[] employee_id, string department_id, string division_id, string section_id, object userState) {
            if ((this.createAreaSupervisorOperationCompleted == null)) {
                this.createAreaSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateAreaSupervisorOperationCompleted);
            }
            this.InvokeAsync("createAreaSupervisor", new object[] {
                        employee_id,
                        department_id,
                        division_id,
                        section_id}, this.createAreaSupervisorOperationCompleted, userState);
        }
        
        private void OncreateAreaSupervisorOperationCompleted(object arg) {
            if ((this.createAreaSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createAreaSupervisorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getFuctionlistCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createContractorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void updateContractorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getContractorbyidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void checkEmailContractorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createSuperadminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createDelegateSuperadminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteSuperadminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteDelegateSuperadminCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createOHSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createDelegateOHSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteOHSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void deleteDelegateOHSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getAreaByidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void updateAreaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createAreaOHSCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createAreaManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void createAreaSupervisorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591